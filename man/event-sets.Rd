% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/event-sets.R
\name{event-sets}
\alias{event-sets}
\alias{event_intersect}
\alias{event_union}
\alias{event_diff}
\alias{event_invert}
\alias{&.event}
\alias{|.event}
\alias{-.event}
\alias{!.event}
\title{Combine events}
\usage{
event_intersect(x, y)

event_union(x, y)

event_diff(x, y)

event_invert(x)

\method{&}{event}(e1, e2)

\method{|}{event}(e1, e2)

\method{-}{event}(e1, e2)

\method{!}{event}(x)
}
\arguments{
\item{x, y, e1, e2}{\code{[event]}

Events to perform a set operation on.}
}
\description{
Set operations between events are what make the grammar of schedules so
powerful. For example, \code{on_mday(25) & on_wday("Mon")} takes the
\emph{intersection} of these two events, resulting in a new event that only occurs
when the 25th day of the month is also a Monday.
\itemize{
\item \code{&} / \code{event_intersect()}: Take the intersection of two events, creating a
new event that occurs when both \code{x} and \code{y} occured.
\item \code{|} / \code{event_union()}: Take the union of two events, creating a
new event that occurs when either \code{x} or \code{y} occured.
\item \code{-} / \code{event_difference()}: Take the difference of two events, creating a
new event that occurs when \code{x} occured, but \code{y} did not.
\item \code{!} / \code{event_invert()}: Invert an event, creating a
new event that occurs when \code{x} did not occur.
}
}
